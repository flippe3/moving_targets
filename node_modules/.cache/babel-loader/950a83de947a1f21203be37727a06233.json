{"ast":null,"code":"var _jsxFileName = \"/home/chad/snake-game/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport AppleLogo from './assets/applePixels.png';\nimport answer0 from './assets/answer0.png';\nimport answer1 from './assets/answer1.png';\nimport answer2 from './assets/answer2.png';\nimport answer3 from './assets/answer3.png';\nimport answer4 from './assets/answer4.png';\nimport useInterval from './hooks/useInterval';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasX = 350;\nconst canvasY = 480;\nconst initialSnake = [[4, 5], [4, 6]];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 10;\nconst questions = [\"Hur glad har du känt dig de senaste 7 dagarna?\", \"Hur ofta har du känt dig motiverad i skolan de senaste 7 dagarna?\", \"Jag upplever att mina lärare har varit stödjande de senaste 7 dagarna.\", \"Jag upplever att mina klasskamrater har varit stödjande de senaste 7 dagarna\", \"Jag är nöjd med min insats i skolan de senaste 7 dagarna.\", \"Jag har upplevt en hög arbetsbelastning och stress de senaste 7 dagarna.\", \"Hur ofta har du mått dåligt de senaste 7 dagarna?\", \"Hur ofta har du upplevt oro de senaste 7 dagarna?\"];\nconst directions = [1, 1, 1, 1, 1];\nlet answersOrder = [0, 1, 2, 3, 4];\nconst rectWidth = 120;\nconst rectHeight = 50;\nlet selectedAnswer = -1;\nlet gameIsLive = false;\nconst answerPos = [[canvasX / 2 - rectWidth / 2, 0], [canvasX / 2 - rectWidth / 2, 10 + rectHeight], [canvasX / 2 - rectWidth / 2, 20 + 2 * rectHeight], [canvasX / 2 - rectWidth / 2, 30 + 3 * rectHeight], [canvasX / 2 - rectWidth / 2, 40 + 4 * rectHeight]];\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [delay, setDelay] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n  useInterval(() => play(), 0);\n  useInterval(() => runGame(), delay);\n\n  function setDPI() {\n    // Set up CSS size.\n    let dpi = 300;\n\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        canvas.style.width = canvas.style.width || canvas.width + 'px';\n        canvas.style.height = canvas.style.height || canvas.height + 'px'; // Get size information.\n\n        var scaleFactor = dpi / 96;\n        var width = parseFloat(canvas.style.width);\n        var height = parseFloat(canvas.style.height); // Backup the canvas contents.\n\n        var oldScale = canvas.width / width;\n        var backupScale = scaleFactor / oldScale; // var backup = canvas.cloneNode(false);\n        // backup.getContext('2d').drawImage(canvas, 0, 0);\n        // Resize the canvas.\n\n        var ctXX = canvas.getContext('2d');\n        canvas.width = Math.ceil(width * scaleFactor);\n        canvas.height = Math.ceil(height * scaleFactor); // Redraw the canvas image and scale future draws.\n\n        ctx.setTransform(backupScale, 0, 0, backupScale, 0, 0); // ctx.drawImage(backup, 0, 0);\n\n        ctx.setTransform(scaleFactor, 0, 0, scaleFactor, 0, 0);\n      }\n    }\n  }\n\n  function setQuestion(number) {\n    //localStorage.setItem('question', questions[number]);\n    setCurrentQuestion(questions[number]);\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max) + 5;\n  }\n\n  function createAnswers() {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n        for (let i = 0; i < 5; i++) {\n          let answer = document.getElementById('answer' + answersOrder[i]);\n          ctx.drawImage(answer, answerPos[i][0], answerPos[i][1], rectWidth, rectHeight);\n        }\n      }\n    }\n  }\n\n  function randomizeAnswers() {\n    answerPos.forEach(element => {\n      element[0] = getRandomInt(canvasX - rectWidth - 10);\n    });\n    answersOrder = answersOrder.sort((a, b) => 0.5 - Math.random());\n    directions.forEach(element => {\n      let rand = Math.round(Math.random());\n\n      if (rand == 0) {\n        element = -1;\n      } else {\n        element = 1;\n      }\n    });\n    console.log(directions);\n  }\n\n  function moveQuestion() {\n    for (let i = 0; i < 5; i++) {\n      if (answerPos[i][0] + rectWidth >= canvasX) {\n        directions[i] *= -1;\n      } else if (answerPos[i][0] <= 0) {\n        directions[i] *= -1;\n      }\n\n      answerPos[i][0] += directions[i] * 1;\n    } // answerPos.forEach(element => {\n    //   element[0] += 1;\n    // });\n\n  }\n\n  function createBall() {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.beginPath();\n        ctx.fillStyle = '#00FF00';\n        ctx.arc(canvasX / 2, canvasY - 20, 10, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n  }\n\n  function play() {\n    // setSnake(initialSnake);\n    // setApple(initialApple);\n    // setDirection([1, 0]);\n    setDPI();\n    setDelay(timeDelay);\n    setCurrentQuestion(questions[0]); // setScore(0);\n    // randomizeAnswers();\n\n    createAnswers();\n    createBall();\n  }\n\n  function runGame() {\n    if (gameIsLive) {\n      moveQuestion();\n      createBall();\n    }\n\n    createAnswers();\n  }\n\n  function handleMouseInput(x, y) {\n    for (let i = 0; i < 5; i++) {\n      if (x >= answerPos[i][0] && x <= answerPos[i][0] + rectWidth && y >= answerPos[i][1] && y <= answerPos[i][1] + rectHeight && !gameIsLive) {\n        console.log(i);\n        selectedAnswer = i;\n        randomizeAnswers();\n        gameIsLive = true;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"fruit\",\n      src: AppleLogo,\n      alt: \"fruit\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer0\",\n      src: answer0,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer1\",\n      src: answer1,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer2\",\n      src: answer2,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer3\",\n      src: answer3,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer4\",\n      src: answer4,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"playArea\",\n      id: \"canvas\",\n      onClick: function (e) {\n        var elem = document.getElementById('canvas');\n\n        if (elem) {\n          var elemLeft = elem.offsetLeft + elem.clientLeft;\n          var elemTop = elem.offsetTop + elem.clientTop;\n          handleMouseInput(e.clientX - elemLeft, e.clientY - elemTop);\n        }\n      },\n      ref: canvasRef,\n      width: `${canvasX}px`,\n      height: `${canvasY}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"LWC5yhif8Bl4Jeoj7c+m60W7BIU=\", false, function () {\n  return [useInterval, useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","AppleLogo","answer0","answer1","answer2","answer3","answer4","useInterval","canvasX","canvasY","initialSnake","initialApple","scale","timeDelay","questions","directions","answersOrder","rectWidth","rectHeight","selectedAnswer","gameIsLive","answerPos","App","canvasRef","delay","setDelay","currentQuestion","setCurrentQuestion","play","runGame","setDPI","dpi","current","canvas","ctx","getContext","style","width","height","scaleFactor","parseFloat","oldScale","backupScale","ctXX","Math","ceil","setTransform","setQuestion","number","getRandomInt","max","floor","random","createAnswers","clearRect","window","innerWidth","innerHeight","i","answer","document","getElementById","drawImage","randomizeAnswers","forEach","element","sort","a","b","rand","round","console","log","moveQuestion","createBall","beginPath","fillStyle","arc","PI","closePath","fill","handleMouseInput","x","y","e","elem","elemLeft","offsetLeft","clientLeft","elemTop","offsetTop","clientTop","clientX","clientY"],"sources":["/home/chad/snake-game/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport AppleLogo from './assets/applePixels.png';\nimport Monitor from './assets/black.jpeg';\nimport answer0 from './assets/answer0.png';\nimport answer1 from './assets/answer1.png';\nimport answer2 from './assets/answer2.png';\nimport answer3 from './assets/answer3.png';\nimport answer4 from './assets/answer4.png';\nimport useInterval from './hooks/useInterval';\nimport logo from './assets/logo.svg'\nimport { create } from 'domain';\n\n\nconst canvasX = 350;\nconst canvasY = 480;\nconst initialSnake = [\n  [4, 5],\n  [4, 6],\n];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 10;\nconst questions = [\"Hur glad har du känt dig de senaste 7 dagarna?\", \n\"Hur ofta har du känt dig motiverad i skolan de senaste 7 dagarna?\", \n\"Jag upplever att mina lärare har varit stödjande de senaste 7 dagarna.\",\n\"Jag upplever att mina klasskamrater har varit stödjande de senaste 7 dagarna\", \n\"Jag är nöjd med min insats i skolan de senaste 7 dagarna.\", \n\"Jag har upplevt en hög arbetsbelastning och stress de senaste 7 dagarna.\", \"Hur ofta har du mått dåligt de senaste 7 dagarna?\", \n\"Hur ofta har du upplevt oro de senaste 7 dagarna?\"];\n\nconst directions = [1, 1, 1, 1, 1];\nlet answersOrder = [0,1,2,3,4];\n\nconst rectWidth = 120\nconst rectHeight = 50\n\nlet selectedAnswer = -1;\nlet gameIsLive = false;\n\nconst answerPos = [[canvasX / 2 - rectWidth / 2, 0],\n                   [canvasX / 2 - rectWidth / 2, 10 + rectHeight],\n                   [canvasX / 2 - rectWidth / 2, 20 + 2 * rectHeight],\n                   [canvasX / 2 - rectWidth / 2, 30 + 3 * rectHeight],\n                   [canvasX / 2 - rectWidth / 2, 40 + 4 * rectHeight]];\n\nconst App = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [delay, setDelay] = useState<number | null>(null);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n\n  useInterval(() => play(), 0)\n  useInterval(() => runGame(), delay);\n\n  function setDPI() {\n    // Set up CSS size.\n    let dpi = 300;\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        canvas.style.width = canvas.style.width || canvas.width + 'px';\n        canvas.style.height = canvas.style.height || canvas.height + 'px';\n\n        // Get size information.\n        var scaleFactor = dpi / 96;\n        var width = parseFloat(canvas.style.width);\n        var height = parseFloat(canvas.style.height);\n\n        // Backup the canvas contents.\n        var oldScale = canvas.width / width;\n        var backupScale = scaleFactor / oldScale;\n        // var backup = canvas.cloneNode(false);\n        // backup.getContext('2d').drawImage(canvas, 0, 0);\n\n        // Resize the canvas.\n        var ctXX = canvas.getContext('2d');\n        canvas.width = Math.ceil(width * scaleFactor);\n        canvas.height = Math.ceil(height * scaleFactor);\n\n        // Redraw the canvas image and scale future draws.\n        ctx.setTransform(backupScale, 0, 0, backupScale, 0, 0);\n        // ctx.drawImage(backup, 0, 0);\n        ctx.setTransform(scaleFactor, 0, 0, scaleFactor, 0, 0);\n      }\n    }\n  }\n\n  function setQuestion(number: number) {\n    //localStorage.setItem('question', questions[number]);\n    setCurrentQuestion(questions[number]);\n  }\n\n  function getRandomInt(max: number) {\n    return Math.floor(Math.random() * max) + 5;\n  }\n\n  function createAnswers() {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        for (let i = 0; i < 5; i++) {\n          let answer = document.getElementById('answer'+answersOrder[i]) as HTMLCanvasElement;\n          ctx.drawImage(answer,  answerPos[i][0], answerPos[i][1], rectWidth, rectHeight); \n        }\n      }\n    }\n  }\n  \n  function randomizeAnswers() {\n    answerPos.forEach(element => {\n      element[0] = getRandomInt(canvasX - rectWidth - 10);\n    });\n    answersOrder = answersOrder.sort((a, b) => 0.5 - Math.random());\n\n    directions.forEach(element => {\n      let rand = Math.round(Math.random());\n      if (rand == 0) {\n        element = -1;\n      } else {\n        element = 1;\n      }\n    });\n    console.log(directions)\n  }\n  function moveQuestion() {\n    for (let i = 0; i < 5; i++) {\n      if (answerPos[i][0] + rectWidth >= canvasX) {\n        directions[i] *= -1;\n      } else if (answerPos[i][0] <= 0) {\n        directions[i] *= -1;\n      }\n      answerPos[i][0] += directions[i] * 1;\n    }\n    // answerPos.forEach(element => {\n    //   element[0] += 1;\n    // });\n  }\n\n  function createBall(){\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.beginPath();\n        ctx.fillStyle = '#00FF00';\n        ctx.arc(canvasX / 2, canvasY - 20, 10, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n  }\n\n  function play() {\n    // setSnake(initialSnake);\n    // setApple(initialApple);\n    // setDirection([1, 0]);\n    setDPI();\n    setDelay(timeDelay);\n    setCurrentQuestion(questions[0]);\n    // setScore(0);\n    // randomizeAnswers();\n    createAnswers();\n    createBall();\n  }\n\n  function runGame() {\n    if (gameIsLive) {\n      moveQuestion();\n      createBall();\n    }\n    createAnswers();\n  }\n\n  function handleMouseInput(x: any, y: any) {\n    for (let i = 0; i < 5; i++) {\n      if (x >= answerPos[i][0] && x <= answerPos[i][0] + rectWidth && y >= answerPos[i][1] && y <= answerPos[i][1] + rectHeight && !gameIsLive) {\n        console.log(i);\n        selectedAnswer = i;\n        randomizeAnswers();\n        gameIsLive = true;\n      }\n    }\n  }\n  return (\n    <div>\n      <h2>{currentQuestion}</h2>\n      <img id=\"fruit\" src={AppleLogo} alt=\"fruit\" width=\"30\" />\n      <img id=\"answer0\" src={answer0} alt=\"answer\" width=\"30\" />\n      <img id=\"answer1\" src={answer1} alt=\"answer\" width=\"30\" />\n      <img id=\"answer2\" src={answer2} alt=\"answer\" width=\"30\" />\n      <img id=\"answer3\" src={answer3} alt=\"answer\" width=\"30\" />\n      <img id=\"answer4\" src={answer4} alt=\"answer\" width=\"30\" />\n      <canvas\n        className=\"playArea\"\n        id=\"canvas\"\n        onClick={function (e) {\n          var elem = document.getElementById('canvas');\n          if (elem) {\n            var elemLeft = elem.offsetLeft + elem.clientLeft;\n            var elemTop = elem.offsetTop + elem.clientTop;  \n            handleMouseInput(e.clientX - elemLeft, e.clientY - elemTop);\n          }\n        }}\n        ref={canvasRef}\n        width={`${canvasX}px`}\n        height={`${canvasY}px`}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}