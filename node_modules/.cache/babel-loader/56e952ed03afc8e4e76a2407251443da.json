{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  _s();\n\n  const savedCallback = useRef(callback); // Remember the latest callback if it changes\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval\n\n  useEffect(() => {\n    // Don't schedule if no delay is specified\n    if (delay === null) return;\n    const id = setInterval(() => savedCallback.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport default useInterval;","map":{"version":3,"names":["useEffect","useRef","useInterval","callback","delay","savedCallback","current","id","setInterval","clearInterval"],"sources":["/home/chad/snake-game/src/hooks/useInterval.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n  // Remember the latest callback if it changes\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  // Set up the interval\n  useEffect(() => {\n    // Don't schedule if no delay is specified\n    if (delay === null) return;\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA2CC,KAA3C,EAAiE;EAAA;;EAC/D,MAAMC,aAAa,GAAGJ,MAAM,CAACE,QAAD,CAA5B,CAD+D,CAE/D;;EACAH,SAAS,CAAC,MAAM;IACdK,aAAa,CAACC,OAAd,GAAwBH,QAAxB;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAH+D,CAM/D;;EACAH,SAAS,CAAC,MAAM;IACd;IACA,IAAII,KAAK,KAAK,IAAd,EAAoB;IACpB,MAAMG,EAAE,GAAGC,WAAW,CAAC,MAAMH,aAAa,CAACC,OAAd,EAAP,EAAgCF,KAAhC,CAAtB;IAEA,OAAO,MAAMK,aAAa,CAACF,EAAD,CAA1B;EACD,CANQ,EAMN,CAACH,KAAD,CANM,CAAT;AAOD;;GAdQF,W;;AAgBT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}