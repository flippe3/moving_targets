{"ast":null,"code":"var _jsxFileName = \"/home/chad/snake-game/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport AppleLogo from './assets/applePixels.png';\nimport answer0 from './assets/answer0.png';\nimport answer1 from './assets/answer1.png';\nimport answer2 from './assets/answer2.png';\nimport answer3 from './assets/answer3.png';\nimport answer4 from './assets/answer4.png';\nimport useInterval from './hooks/useInterval';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasX = 350;\nconst canvasY = 480;\nconst initialSnake = [[4, 5], [4, 6]];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 10;\nconst questions = [\"Hur glad har du känt dig de senaste 7 dagarna?\", \"Hur ofta har du känt dig motiverad i skolan de senaste 7 dagarna?\", \"Jag upplever att mina lärare har varit stödjande de senaste 7 dagarna.\", \"Jag upplever att mina klasskamrater har varit stödjande de senaste 7 dagarna\", \"Jag är nöjd med min insats i skolan de senaste 7 dagarna.\", \"Jag har upplevt en hög arbetsbelastning och stress de senaste 7 dagarna.\", \"Hur ofta har du mått dåligt de senaste 7 dagarna?\", \"Hur ofta har du upplevt oro de senaste 7 dagarna?\"];\nconst directions = [1, 1, 1, 1, 1];\nlet answersOrder = [0, 1, 2, 3, 4];\nconst rectWidth = 120;\nconst rectHeight = 50;\nconst answerPos = [[canvasX / 2 - rectWidth / 2, 0], [canvasX / 2 - rectWidth / 2, 10 + rectHeight], [canvasX / 2 - rectWidth / 2, 20 + 2 * rectHeight], [canvasX / 2 - rectWidth / 2, 30 + 3 * rectHeight], [canvasX / 2 - rectWidth / 2, 40 + 4 * rectHeight]];\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState(initialSnake);\n  const [apple, setApple] = useState(initialApple);\n  const [direction, setDirection] = useState([0, -1]);\n  const [delay, setDelay] = useState(null);\n  const [score, setScore] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n  useInterval(() => runGame(), delay);\n  useEffect(() => {\n    let fruit = document.getElementById('fruit');\n\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {// ctx.setTransform(scale, 0, 0, scale, 0, 0);\n        // ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        // ctx.fillStyle = '#a3d001';\n        // snake.forEach(([x, y]) => ctx.fillRect(x, y, 1, 1));\n        // ctx.drawImage(fruit, apple[0], apple[1], 1, 1);\n      }\n    }\n  }, [snake, apple]);\n\n  function handleSetScore() {\n    if (score > Number(localStorage.getItem('snakeScore'))) {\n      localStorage.setItem('snakeScore', JSON.stringify(score));\n    }\n  }\n\n  function setDPI() {\n    // Set up CSS size.\n    let dpi = 300;\n\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        canvas.style.width = canvas.style.width || canvas.width + 'px';\n        canvas.style.height = canvas.style.height || canvas.height + 'px'; // Get size information.\n\n        var scaleFactor = dpi / 96;\n        var width = parseFloat(canvas.style.width);\n        var height = parseFloat(canvas.style.height); // Backup the canvas contents.\n\n        var oldScale = canvas.width / width;\n        var backupScale = scaleFactor / oldScale; // var backup = canvas.cloneNode(false);\n        // backup.getContext('2d').drawImage(canvas, 0, 0);\n        // Resize the canvas.\n\n        var ctXX = canvas.getContext('2d');\n        canvas.width = Math.ceil(width * scaleFactor);\n        canvas.height = Math.ceil(height * scaleFactor); // Redraw the canvas image and scale future draws.\n\n        ctx.setTransform(backupScale, 0, 0, backupScale, 0, 0); // ctx.drawImage(backup, 0, 0);\n\n        ctx.setTransform(scaleFactor, 0, 0, scaleFactor, 0, 0);\n      }\n    }\n  }\n\n  function setQuestion(number) {\n    //localStorage.setItem('question', questions[number]);\n    setCurrentQuestion(questions[number]);\n  }\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max) + 5;\n  }\n\n  function createAnswers() {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        let y = 10;\n\n        for (let i = 0; i < 5; i++) {\n          let answer = document.getElementById('answer' + answersOrder[i]);\n          ctx.drawImage(answer, answerPos[i][0], answerPos[i][1], rectWidth, rectHeight);\n          y += rectHeight + 10;\n        }\n      }\n    }\n  }\n\n  function randomizeAnswers() {\n    answerPos.forEach(element => {\n      element[0] = getRandomInt(canvasX - rectWidth - 10);\n    });\n    answersOrder = answersOrder.sort((a, b) => 0.5 - Math.random());\n    directions.forEach(element => {\n      let rand = Math.round(Math.random());\n\n      if (rand == 0) {\n        element = -1;\n      } else {\n        element = 1;\n      }\n    });\n    console.log(directions);\n  }\n\n  function moveQuestion() {\n    for (let i = 0; i < 5; i++) {\n      if (answerPos[i][0] + rectWidth >= canvasX) {\n        directions[i] *= -1;\n      } else if (answerPos[i][0] <= 0) {\n        directions[i] *= -1;\n      }\n\n      answerPos[i][0] += directions[i] * 1;\n    } // answerPos.forEach(element => {\n    //   element[0] += 1;\n    // });\n\n  }\n\n  function createBall() {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.beginPath();\n        ctx.fillStyle = '#00FF00';\n        ctx.arc(canvasX / 2, canvasY - 20, 10, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n  }\n\n  function play() {\n    // setSnake(initialSnake);\n    // setApple(initialApple);\n    // setDirection([1, 0]);\n    setDPI();\n    setDelay(timeDelay);\n    setCurrentQuestion(questions[0]); // setScore(0);\n    // randomizeAnswers();\n\n    createAnswers();\n    cnvs = document.getElementById('canvas'); // createBall();\n  }\n\n  function checkCollision(head) {\n    // for (let i = 0; i < snake.length; i++) {\n    //   if (head[i] < 0 || head[i] * scale >= canvasX) {\n    //   }\n    //   return true;\n    // }\n    // // for (const s of snake) {\n    //   if (head[0] === s[0] && head[1] === s[1]) return true;\n    // }\n    return false;\n  }\n\n  function appleAte(newSnake) {\n    let coord = apple.map(() => Math.floor(Math.random() * canvasX / scale));\n\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = coord;\n      setScore(score + 1);\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  }\n\n  function runGame() {\n    // moveQuestion();\n    createAnswers();\n    createBall();\n  }\n\n  function changeDirection(e) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        setDirection([-1, 0]);\n        break;\n\n      case 'ArrowUp':\n        setDirection([0, -1]);\n        break;\n\n      case 'ArrowRight':\n        setDirection([1, 0]);\n        break;\n\n      case 'ArrowDown':\n        setDirection([0, 1]);\n        break;\n    }\n  }\n\n  function eventListener() {\n    var e = window.event;\n\n    if (e) {\n      console.log(e.position);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: e => changeDirection(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"fruit\",\n      src: AppleLogo,\n      alt: \"fruit\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer0\",\n      src: answer0,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer1\",\n      src: answer1,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer2\",\n      src: answer2,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer3\",\n      src: answer3,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"answer4\",\n      src: answer4,\n      alt: \"answer\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"playArea\",\n      id: \"canvas\",\n      onClick: eventListener,\n      ref: canvasRef,\n      width: `${canvasX}px`,\n      height: `${canvasY}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: play,\n      className: \"playButton\",\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dJ2+eReE1G34WdDs/tQeNqyFq38=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AppleLogo","answer0","answer1","answer2","answer3","answer4","useInterval","canvasX","canvasY","initialSnake","initialApple","scale","timeDelay","questions","directions","answersOrder","rectWidth","rectHeight","answerPos","App","canvasRef","snake","setSnake","apple","setApple","direction","setDirection","delay","setDelay","score","setScore","currentQuestion","setCurrentQuestion","runGame","fruit","document","getElementById","current","canvas","ctx","getContext","handleSetScore","Number","localStorage","getItem","setItem","JSON","stringify","setDPI","dpi","style","width","height","scaleFactor","parseFloat","oldScale","backupScale","ctXX","Math","ceil","setTransform","setQuestion","number","getRandomInt","max","floor","random","createAnswers","clearRect","window","innerWidth","innerHeight","y","i","answer","drawImage","randomizeAnswers","forEach","element","sort","a","b","rand","round","console","log","moveQuestion","createBall","beginPath","fillStyle","arc","PI","closePath","fill","play","cnvs","checkCollision","head","appleAte","newSnake","coord","map","newApple","changeDirection","e","key","eventListener","event","position"],"sources":["/home/chad/snake-game/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport AppleLogo from './assets/applePixels.png';\nimport Monitor from './assets/black.jpeg';\nimport answer0 from './assets/answer0.png';\nimport answer1 from './assets/answer1.png';\nimport answer2 from './assets/answer2.png';\nimport answer3 from './assets/answer3.png';\nimport answer4 from './assets/answer4.png';\nimport useInterval from './hooks/useInterval';\nimport logo from './assets/logo.svg'\nimport { create } from 'domain';\n\n\nconst canvasX = 350;\nconst canvasY = 480;\nconst initialSnake = [\n  [4, 5],\n  [4, 6],\n];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 10;\nconst questions = [\"Hur glad har du känt dig de senaste 7 dagarna?\", \n\"Hur ofta har du känt dig motiverad i skolan de senaste 7 dagarna?\", \n\"Jag upplever att mina lärare har varit stödjande de senaste 7 dagarna.\",\n\"Jag upplever att mina klasskamrater har varit stödjande de senaste 7 dagarna\", \n\"Jag är nöjd med min insats i skolan de senaste 7 dagarna.\", \n\"Jag har upplevt en hög arbetsbelastning och stress de senaste 7 dagarna.\", \"Hur ofta har du mått dåligt de senaste 7 dagarna?\", \n\"Hur ofta har du upplevt oro de senaste 7 dagarna?\"];\n\nconst directions = [1, 1, 1, 1, 1];\nlet answersOrder = [0,1,2,3,4];\n\nconst rectWidth = 120\nconst rectHeight = 50\n\nconst answerPos = [[canvasX / 2 - rectWidth / 2, 0],\n                   [canvasX / 2 - rectWidth / 2, 10 + rectHeight],\n                   [canvasX / 2 - rectWidth / 2, 20 + 2 * rectHeight],\n                   [canvasX / 2 - rectWidth / 2, 30 + 3 * rectHeight],\n                   [canvasX / 2 - rectWidth / 2, 40 + 4 * rectHeight]];\n\nconst App = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [snake, setSnake] = useState(initialSnake);\n  const [apple, setApple] = useState(initialApple);\n  const [direction, setDirection] = useState([0, -1]);\n  const [delay, setDelay] = useState<number | null>(null);\n  const [score, setScore] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n\n  useInterval(() => runGame(), delay);\n\n  useEffect(() => {\n    let fruit = document.getElementById('fruit') as HTMLCanvasElement;\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        // ctx.setTransform(scale, 0, 0, scale, 0, 0);\n        // ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        // ctx.fillStyle = '#a3d001';\n        // snake.forEach(([x, y]) => ctx.fillRect(x, y, 1, 1));\n        // ctx.drawImage(fruit, apple[0], apple[1], 1, 1);\n      }\n    }\n  }, [snake, apple]);\n\n  function handleSetScore() {\n    if (score > Number(localStorage.getItem('snakeScore'))) {\n      localStorage.setItem('snakeScore', JSON.stringify(score));\n    }\n  }\n\n  function setDPI() {\n    // Set up CSS size.\n    let dpi = 300;\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        canvas.style.width = canvas.style.width || canvas.width + 'px';\n        canvas.style.height = canvas.style.height || canvas.height + 'px';\n\n        // Get size information.\n        var scaleFactor = dpi / 96;\n        var width = parseFloat(canvas.style.width);\n        var height = parseFloat(canvas.style.height);\n\n        // Backup the canvas contents.\n        var oldScale = canvas.width / width;\n        var backupScale = scaleFactor / oldScale;\n        // var backup = canvas.cloneNode(false);\n        // backup.getContext('2d').drawImage(canvas, 0, 0);\n\n        // Resize the canvas.\n        var ctXX = canvas.getContext('2d');\n        canvas.width = Math.ceil(width * scaleFactor);\n        canvas.height = Math.ceil(height * scaleFactor);\n\n        // Redraw the canvas image and scale future draws.\n        ctx.setTransform(backupScale, 0, 0, backupScale, 0, 0);\n        // ctx.drawImage(backup, 0, 0);\n        ctx.setTransform(scaleFactor, 0, 0, scaleFactor, 0, 0);\n      }\n    }\n  }\n\n  function setQuestion(number: number) {\n    //localStorage.setItem('question', questions[number]);\n    setCurrentQuestion(questions[number]);\n  }\n\n  function getRandomInt(max: number) {\n    return Math.floor(Math.random() * max) + 5;\n  }\n\n  function createAnswers() {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        let y = 10;\n        for (let i = 0; i < 5; i++) {\n          let answer = document.getElementById('answer'+answersOrder[i]) as HTMLCanvasElement;\n          ctx.drawImage(answer,  answerPos[i][0], answerPos[i][1], rectWidth, rectHeight); \n          y += rectHeight + 10;  \n        }\n      }\n    }\n  }\n  \n  function randomizeAnswers() {\n    answerPos.forEach(element => {\n      element[0] = getRandomInt(canvasX - rectWidth - 10);\n    });\n    answersOrder = answersOrder.sort((a, b) => 0.5 - Math.random());\n\n    directions.forEach(element => {\n      let rand = Math.round(Math.random());\n      if (rand == 0) {\n        element = -1;\n      } else {\n        element = 1;\n      }\n    });\n    console.log(directions)\n  }\n  function moveQuestion() {\n    for (let i = 0; i < 5; i++) {\n      if (answerPos[i][0] + rectWidth >= canvasX) {\n        directions[i] *= -1;\n      } else if (answerPos[i][0] <= 0) {\n        directions[i] *= -1;\n      }\n      answerPos[i][0] += directions[i] * 1;\n    }\n    // answerPos.forEach(element => {\n    //   element[0] += 1;\n    // });\n  }\n\n  function createBall(){\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.beginPath();\n        ctx.fillStyle = '#00FF00';\n        ctx.arc(canvasX / 2, canvasY - 20, 10, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n  }\n\n  function play() {\n    // setSnake(initialSnake);\n    // setApple(initialApple);\n    // setDirection([1, 0]);\n    setDPI();\n    setDelay(timeDelay);\n    setCurrentQuestion(questions[0]);\n    // setScore(0);\n    // randomizeAnswers();\n    createAnswers();\n    cnvs = document.getElementById('canvas');\n    // createBall();\n  }\n  function checkCollision(head: number[]) {\n    // for (let i = 0; i < snake.length; i++) {\n    //   if (head[i] < 0 || head[i] * scale >= canvasX) {\n    //   }\n    //   return true;\n    // }\n    // // for (const s of snake) {\n    //   if (head[0] === s[0] && head[1] === s[1]) return true;\n    // }\n    return false;\n  }\n  function appleAte(newSnake: number[][]) {\n    let coord = apple.map(() => Math.floor((Math.random() * canvasX) / scale));\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = coord;\n      setScore(score + 1);\n      setApple(newApple);\n      return true;\n    }\n    return false;\n  }\n\n  function runGame() {\n    // moveQuestion();\n    createAnswers();\n    createBall();\n  }\n  function changeDirection(e: React.KeyboardEvent<HTMLDivElement>) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        setDirection([-1, 0]);\n        break;\n      case 'ArrowUp':\n        setDirection([0, -1]);\n        break;\n      case 'ArrowRight':\n        setDirection([1, 0]);\n        break;\n      case 'ArrowDown':\n        setDirection([0, 1]);\n        break;\n    }\n  }\n\n  function eventListener() {\n    var e = window.event;\n    if (e) {\n      console.log(e.position);\n    }\n  }\n\n  return (\n    <div onKeyDown={e => changeDirection(e)}>\n      <h2>{currentQuestion}</h2>\n      <img id=\"fruit\" src={AppleLogo} alt=\"fruit\" width=\"30\" />\n      <img id=\"answer0\" src={answer0} alt=\"answer\" width=\"30\" />\n      <img id=\"answer1\" src={answer1} alt=\"answer\" width=\"30\" />\n      <img id=\"answer2\" src={answer2} alt=\"answer\" width=\"30\" />\n      <img id=\"answer3\" src={answer3} alt=\"answer\" width=\"30\" />\n      <img id=\"answer4\" src={answer4} alt=\"answer\" width=\"30\" />\n      <canvas\n        className=\"playArea\"\n        id=\"canvas\"\n        onClick={eventListener}\n        ref={canvasRef}\n        width={`${canvasX}px`}\n        height={`${canvasY}px`}\n      />\n      <button onClick={play} className=\"playButton\">\n        Play\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}