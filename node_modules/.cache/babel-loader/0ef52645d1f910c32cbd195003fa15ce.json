{"ast":null,"code":"var _jsxFileName = \"/home/chad/snake-game/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport AppleLogo from './assets/applePixels.png';\nimport Monitor from './assets/black.jpeg';\nimport useInterval from './hooks/useInterval';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasX = 1000;\nconst canvasY = 1000;\nconst initialSnake = [[4, 10], [4, 10]];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 50;\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState(initialSnake);\n  const [apple, setApple] = useState(initialApple);\n  const [direction, setDirection] = useState([0, -1]);\n  const [delay, setDelay] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  useInterval(() => runGame(), delay);\n  useEffect(() => {\n    let fruit = document.getElementById('fruit');\n\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.setTransform(scale, 0, 0, scale, 0, 0);\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        ctx.fillStyle = '#a3d001';\n        snake.forEach(_ref => {\n          let [x, y] = _ref;\n          return ctx.fillRect(x, y, 1, 1);\n        });\n        ctx.drawImage(fruit, apple[0], apple[1], 1, 1);\n      }\n    }\n  }, [snake, apple, gameOver]);\n\n  function handleSetScore() {\n    if (score > Number(localStorage.getItem('snakeScore'))) {\n      localStorage.setItem('snakeScore', JSON.stringify(score));\n    }\n  }\n\n  function play() {\n    setSnake(initialSnake);\n    setApple(initialApple);\n    setDirection([1, 0]);\n    setDelay(timeDelay);\n    setScore(0);\n    setGameOver(false);\n  }\n\n  function checkCollision(head) {\n    for (let i = 0; i < snake.length; i++) {\n      if (head[i] < 0 || head[i] * scale >= canvasX) return true;\n    }\n\n    for (const s of snake) {\n      if (head[0] === s[0] && head[1] === s[1]) return true;\n    }\n\n    return false;\n  }\n\n  function appleAte(newSnake) {\n    let coord = apple.map(() => Math.floor(Math.random() * canvasX / scale));\n\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = coord;\n      setScore(score + 1);\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  }\n\n  function runGame() {\n    const newSnake = [...snake];\n    const newSnakeHead = [newSnake[0][0] + direction[0], newSnake[0][1] + direction[1]];\n    newSnake.unshift(newSnakeHead);\n\n    if (checkCollision(newSnakeHead)) {\n      setDelay(null);\n      setGameOver(true);\n      handleSetScore();\n    }\n\n    if (!appleAte(newSnake)) {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }\n\n  function changeDirection(e) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        setDirection([-1, 0]);\n        break;\n\n      case 'ArrowUp':\n        setDirection([0, -1]);\n        break;\n\n      case 'ArrowRight':\n        setDirection([1, 0]);\n        break;\n\n      case 'ArrowDown':\n        setDirection([0, 1]);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: e => changeDirection(e),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"fruit\",\n      src: AppleLogo,\n      alt: \"fruit\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Monitor,\n      alt: \"fruit\",\n      width: \"1000\",\n      className: \"monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"playArea\",\n      ref: canvasRef,\n      width: `${canvasX}px`,\n      height: `${canvasY}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameOver\",\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: play,\n      className: \"playButton\",\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"High Score: \", localStorage.getItem('snakeScore')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qfwh0IVblzBSrNBN99LrOlWBy1E=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AppleLogo","Monitor","useInterval","canvasX","canvasY","initialSnake","initialApple","scale","timeDelay","App","canvasRef","snake","setSnake","apple","setApple","direction","setDirection","delay","setDelay","gameOver","setGameOver","score","setScore","runGame","fruit","document","getElementById","current","canvas","ctx","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","drawImage","handleSetScore","Number","localStorage","getItem","setItem","JSON","stringify","play","checkCollision","head","i","length","s","appleAte","newSnake","coord","map","Math","floor","random","newApple","newSnakeHead","unshift","pop","changeDirection","e","key"],"sources":["/home/chad/snake-game/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport AppleLogo from './assets/applePixels.png';\nimport Monitor from './assets/black.jpeg';\nimport useInterval from './hooks/useInterval';\n\nconst canvasX = 1000;\nconst canvasY = 1000;\nconst initialSnake = [\n  [4, 10],\n  [4, 10],\n];\nconst initialApple = [14, 10];\nconst scale = 50;\nconst timeDelay = 50;\n\nconst App = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [snake, setSnake] = useState(initialSnake);\n  const [apple, setApple] = useState(initialApple);\n  const [direction, setDirection] = useState([0, -1]);\n  const [delay, setDelay] = useState<number | null>(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  useInterval(() => runGame(), delay);\n\n  useEffect(() => {\n    let fruit = document.getElementById('fruit') as HTMLCanvasElement;\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.setTransform(scale, 0, 0, scale, 0, 0);\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        ctx.fillStyle = '#a3d001';\n        snake.forEach(([x, y]) => ctx.fillRect(x, y, 1, 1));\n        ctx.drawImage(fruit, apple[0], apple[1], 1, 1);\n      }\n    }\n  }, [snake, apple, gameOver]);\n\n  function handleSetScore() {\n    if (score > Number(localStorage.getItem('snakeScore'))) {\n      localStorage.setItem('snakeScore', JSON.stringify(score));\n    }\n  }\n\n  function play() {\n    setSnake(initialSnake);\n    setApple(initialApple);\n    setDirection([1, 0]);\n    setDelay(timeDelay);\n    setScore(0);\n    setGameOver(false);\n  }\n  function checkCollision(head: number[]) {\n    for (let i = 0; i < snake.length; i++) {\n      if (head[i] < 0 || head[i] * scale >= canvasX) return true;\n    }\n    for (const s of snake) {\n      if (head[0] === s[0] && head[1] === s[1]) return true;\n    }\n    return false;\n  }\n  function appleAte(newSnake: number[][]) {\n    let coord = apple.map(() => Math.floor((Math.random() * canvasX) / scale));\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n      let newApple = coord;\n      setScore(score + 1);\n      setApple(newApple);\n      return true;\n    }\n    return false;\n  }\n\n  function runGame() {\n    const newSnake = [...snake];\n    const newSnakeHead = [\n      newSnake[0][0] + direction[0],\n      newSnake[0][1] + direction[1],\n    ];\n    newSnake.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) {\n      setDelay(null);\n      setGameOver(true);\n      handleSetScore();\n    }\n    if (!appleAte(newSnake)) {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }\n  function changeDirection(e: React.KeyboardEvent<HTMLDivElement>) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        setDirection([-1, 0]);\n        break;\n      case 'ArrowUp':\n        setDirection([0, -1]);\n        break;\n      case 'ArrowRight':\n        setDirection([1, 0]);\n        break;\n      case 'ArrowDown':\n        setDirection([0, 1]);\n        break;\n    }\n  }\n\n  return (\n    <div onKeyDown={e => changeDirection(e)}>\n      <img id=\"fruit\" src={AppleLogo} alt=\"fruit\" width=\"30\" />\n      <img src={Monitor} alt=\"fruit\" width=\"1000\" className=\"monitor\" />\n      <canvas\n        className=\"playArea\"\n        ref={canvasRef}\n        width={`${canvasX}px`}\n        height={`${canvasY}px`}\n      />\n      {gameOver && <div className=\"gameOver\">Game Over</div>}\n      <button onClick={play} className=\"playButton\">\n        Play\n      </button>\n      <div className=\"scoreBox\">\n        <h2>Score: {score}</h2>\n        <h2>High Score: {localStorage.getItem('snakeScore')}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,MAAMC,OAAO,GAAG,IAAhB;AACA,MAAMC,OAAO,GAAG,IAAhB;AACA,MAAMC,YAAY,GAAG,CACnB,CAAC,CAAD,EAAI,EAAJ,CADmB,EAEnB,CAAC,CAAD,EAAI,EAAJ,CAFmB,CAArB;AAIA,MAAMC,YAAY,GAAG,CAAC,EAAD,EAAK,EAAL,CAArB;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAMC,SAAS,GAAGZ,MAAM,CAA2B,IAA3B,CAAxB;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACM,YAAD,CAAlC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACO,YAAD,CAAlC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,CAA1C;EACA,MAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAgB,IAAhB,CAAlC;EACA,MAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,CAAD,CAAlC;EAEAG,WAAW,CAAC,MAAMqB,OAAO,EAAd,EAAkBN,KAAlB,CAAX;EAEApB,SAAS,CAAC,MAAM;IACd,IAAI2B,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;;IACA,IAAIhB,SAAS,CAACiB,OAAd,EAAuB;MACrB,MAAMC,MAAM,GAAGlB,SAAS,CAACiB,OAAzB;MACA,MAAME,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;;MACA,IAAID,GAAJ,EAAS;QACPA,GAAG,CAACE,YAAJ,CAAiBxB,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BA,KAA9B,EAAqC,CAArC,EAAwC,CAAxC;QACAsB,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,MAAM,CAACC,UAA3B,EAAuCD,MAAM,CAACE,WAA9C;QACAN,GAAG,CAACO,SAAJ,GAAgB,SAAhB;QACAzB,KAAK,CAAC0B,OAAN,CAAc;UAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;UAAA,OAAYV,GAAG,CAACW,QAAJ,CAAaF,CAAb,EAAgBC,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAZ;QAAA,CAAd;QACAV,GAAG,CAACY,SAAJ,CAAcjB,KAAd,EAAqBX,KAAK,CAAC,CAAD,CAA1B,EAA+BA,KAAK,CAAC,CAAD,CAApC,EAAyC,CAAzC,EAA4C,CAA5C;MACD;IACF;EACF,CAbQ,EAaN,CAACF,KAAD,EAAQE,KAAR,EAAeM,QAAf,CAbM,CAAT;;EAeA,SAASuB,cAAT,GAA0B;IACxB,IAAIrB,KAAK,GAAGsB,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAAlB,EAAwD;MACtDD,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe3B,KAAf,CAAnC;IACD;EACF;;EAED,SAAS4B,IAAT,GAAgB;IACdrC,QAAQ,CAACP,YAAD,CAAR;IACAS,QAAQ,CAACR,YAAD,CAAR;IACAU,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAZ;IACAE,QAAQ,CAACV,SAAD,CAAR;IACAc,QAAQ,CAAC,CAAD,CAAR;IACAF,WAAW,CAAC,KAAD,CAAX;EACD;;EACD,SAAS8B,cAAT,CAAwBC,IAAxB,EAAwC;IACtC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzC,KAAK,CAAC0C,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAID,IAAI,CAACC,CAAD,CAAJ,GAAU,CAAV,IAAeD,IAAI,CAACC,CAAD,CAAJ,GAAU7C,KAAV,IAAmBJ,OAAtC,EAA+C,OAAO,IAAP;IAChD;;IACD,KAAK,MAAMmD,CAAX,IAAgB3C,KAAhB,EAAuB;MACrB,IAAIwC,IAAI,CAAC,CAAD,CAAJ,KAAYG,CAAC,CAAC,CAAD,CAAb,IAAoBH,IAAI,CAAC,CAAD,CAAJ,KAAYG,CAAC,CAAC,CAAD,CAArC,EAA0C,OAAO,IAAP;IAC3C;;IACD,OAAO,KAAP;EACD;;EACD,SAASC,QAAT,CAAkBC,QAAlB,EAAwC;IACtC,IAAIC,KAAK,GAAG5C,KAAK,CAAC6C,GAAN,CAAU,MAAMC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB1D,OAAjB,GAA4BI,KAAvC,CAAhB,CAAZ;;IACA,IAAIiD,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,MAAmB3C,KAAK,CAAC,CAAD,CAAxB,IAA+B2C,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,MAAmB3C,KAAK,CAAC,CAAD,CAA3D,EAAgE;MAC9D,IAAIiD,QAAQ,GAAGL,KAAf;MACAnC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACAP,QAAQ,CAACgD,QAAD,CAAR;MACA,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EAED,SAASvC,OAAT,GAAmB;IACjB,MAAMiC,QAAQ,GAAG,CAAC,GAAG7C,KAAJ,CAAjB;IACA,MAAMoD,YAAY,GAAG,CACnBP,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,IAAiBzC,SAAS,CAAC,CAAD,CADP,EAEnByC,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,IAAiBzC,SAAS,CAAC,CAAD,CAFP,CAArB;IAIAyC,QAAQ,CAACQ,OAAT,CAAiBD,YAAjB;;IACA,IAAIb,cAAc,CAACa,YAAD,CAAlB,EAAkC;MAChC7C,QAAQ,CAAC,IAAD,CAAR;MACAE,WAAW,CAAC,IAAD,CAAX;MACAsB,cAAc;IACf;;IACD,IAAI,CAACa,QAAQ,CAACC,QAAD,CAAb,EAAyB;MACvBA,QAAQ,CAACS,GAAT;IACD;;IACDrD,QAAQ,CAAC4C,QAAD,CAAR;EACD;;EACD,SAASU,eAAT,CAAyBC,CAAzB,EAAiE;IAC/D,QAAQA,CAAC,CAACC,GAAV;MACE,KAAK,WAAL;QACEpD,YAAY,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,CAAD,CAAZ;QACA;;MACF,KAAK,SAAL;QACEA,YAAY,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,CAAZ;QACA;;MACF,KAAK,YAAL;QACEA,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAZ;QACA;;MACF,KAAK,WAAL;QACEA,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAZ;QACA;IAZJ;EAcD;;EAED,oBACE;IAAK,SAAS,EAAEmD,CAAC,IAAID,eAAe,CAACC,CAAD,CAApC;IAAA,wBACE;MAAK,EAAE,EAAC,OAAR;MAAgB,GAAG,EAAEnE,SAArB;MAAgC,GAAG,EAAC,OAApC;MAA4C,KAAK,EAAC;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,GAAG,EAAEC,OAAV;MAAmB,GAAG,EAAC,OAAvB;MAA+B,KAAK,EAAC,MAArC;MAA4C,SAAS,EAAC;IAAtD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MACE,SAAS,EAAC,UADZ;MAEE,GAAG,EAAES,SAFP;MAGE,KAAK,EAAG,GAAEP,OAAQ,IAHpB;MAIE,MAAM,EAAG,GAAEC,OAAQ;IAJrB;MAAA;MAAA;MAAA;IAAA,QAHF,EASGe,QAAQ,iBAAI;MAAK,SAAS,EAAC,UAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATf,eAUE;MAAQ,OAAO,EAAE8B,IAAjB;MAAuB,SAAS,EAAC,YAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAaE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAA,sBAAY5B,KAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,2BAAiBuB,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAlHD;;GAAMpC,G;UASJP,W;;;KATIO,G;AAoHN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}